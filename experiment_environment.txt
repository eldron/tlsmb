experiment environment:

sudo apt-get install python-pip
pip install six
pip install ecdsa
pip install selectors2
git clone tlslite-ng
sudo python setup.py install


Run experiments:
1.  cd into test_server
    tls.py server -c serverX509Cert.pem -k serverX509Key.pem 127.0.0.1:4443
2.  start inspection server
    ./inspection rule_type rule_file number_of_rules
    e.g. ./inspection 0 rules_2000 2000
3.  start middlebox
    python mb.py 10000
4.  run tls_client.py
    

no encryption, http server:
1.  cd into test_server
    python -m SimpleHTTPServer 20000
2.  start inspection server
3.  start middlebox
    python simple_mb.py 10000
4.  run http_client.py (direct download or through middlebox)

tls encryption, no middlebox:
1.  cd into test_server
    tls.py server -c serverX509Cert.pem -k serverX509Key.pem 127.0.0.1:4443
2.  time python test_client.py

tls encryption, download file through middlebox:
1.  cd into test_server
    tls.py server -c serverX509Cert.pem -k serverX509Key.pem 127.0.0.1:4443
2.  start inspection server
3.  start middlebox
    

data:
test delay, 20 connections:

aes128gcm
            can_dec=0   can_dec=1
x448        0.719       0.761
x25519      0.456       0.609
secp256r1   2.287       2.552
secp384r1   5.165       5.319
secp521r1   8.957       9.122

aes256gcm
            can_dec=0   can_dec=1
x448        0.727       0.764
x25519      0.437       0.603
secp256r1   2.363       2.6
secp384r1   5.031       5.215
secp521r1   9.089       9.149

chacha20-poly1305
            can_dec=0   can_dec=1
x448        0.746       0.853
x25519      0.446       0.619
secp256r1   2.299       2.546
secp384r1   5.042       5.242
secp521r1   9.436       9.829


100 connections, x270
cmd:
run tls.py server
run test_conn_delay.py

aes128gcm
            can_dec=0   can_dec=1
x448        2.718       3.019
x25519      1.591       2.516
secp256r1   9.468       10.897
secp384r1   25.502      25.974
secp521r1   43.817      44.513

aes256gcm
            can_dec=0   can_dec=1
x448        2.7         3.024
x25519      1.596       2.447
secp256r1   9.409       11.007
secp384r1   25.780      26.955
secp521r1   43.909      44.766

chacha20-poly1305
            can_dec=0   can_dec=1
x448        2.741       3.094
x25519      1.692       2.544
secp256r1   9.583       11.073
secp384r1   26.381      27.02
secp521r1   43.824      44.477

inspection throughput:

download through simple middlebox:
cmd:
1. run tls.py server
2. run simple_mb (no inspection)
3. run tls_client

x25519 aes128gcm
13.039
13.05
13.019
13.109
13.090
13.113
13.2
13.343
13.183
13.153
mean: 13.1299

x25519 aes256gcm
13.151
13.182
13.381
13.159
13.482
13.137
13.294
13.177
13.150
13.145
mean: 13.2258

x25519 chacha20-poly1305
12.243
12.252
12.692
12.354
12.309
12.294
12.304
12.349
12.3
12.327
mean: 12.342

snort rules: 3000 rules
x25519 aes128gcm
13.209
13.1
13.235
13.638
12.996
13.244
12.951
13.956
13.01
13.099

x25519 aes256gcm
13.074
12.882
12.913
13.126
12.970
13.066
13.111
13.658
13.340
13.05

x25519 chacha20-poly1305
12.439
12.156
12.191
12.137
12.385
12.141
12.266
12.147
12.143
12.178

clamav rules
x25519 aes128gcm
4000
8000
12000
16000
20000
24000
28000
32000
36000
